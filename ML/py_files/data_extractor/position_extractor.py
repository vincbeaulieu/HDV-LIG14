import os, inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

from ML.py_files.Lib14.data_properties import HDV_LIG14

import numpy as np

# Position Extractor
def position_extractor():
    LIG_Lib14_RNA = HDV_LIG14.lig_rna_sequence
    HDV_Lib14_RNA = HDV_LIG14.hdv_rna_sequence

    # Find in consecutive order the position of all IUPAC nonsingleton nucleotide set
    def get_nt_position(rna_type):
        i = 0
        p = 0
        nt_pos = []
        for s in rna_type:
            if s != 'A' and (s != 'T' and s!='U') and s != 'C' and s != 'G':
                i += 1
                nt_pos.append([i,s,p])
            p += 1
        return nt_pos
    # ref: https://www.bioinformatics.org/sms/iupac.html
    
    
    description = "* Results generated by the position_extractor function in data.py"

    hdv_list_title = "HDV IUPAC nucleotides positions:"
    hdv_nt_pos = get_nt_position(HDV_Lib14_RNA)

    lig_list_title = "LIG IUPAC nucleotides positions:"
    lig_nt_pos = get_nt_position(LIG_Lib14_RNA)

    temp_warning = "* There might be an error in the provided assignment guides about the RED letters."

    filepath = currentdir + "/" + "nt_position.txt"
    print(filepath)
    with open(filepath,'w') as file:
        file.write("%s\n" % description)
        
        file.write("\n%s\n" % hdv_list_title)
        for item in hdv_nt_pos:
            i,s,p = item
            file.write("%i\t%c\t%i\n" % (i,s,p))

        file.write("\n%s\n" % lig_list_title)
        for item in lig_nt_pos:
            i,s,p = item
            file.write("%i\t%c\t%i\n" % (i,s,p))

        file.write("\n%s\n" % temp_warning)

    # See 'nt_position.txt'

    return np.array(hdv_nt_pos), np.array(lig_nt_pos)


if __name__ == '__main__':

    hdv_nt_pos, lig_nt_pos = position_extractor()

    # column indices:
    index = 0; letters = 1; positions = 2

    def print_data(start='',delimiter=' ',end=''):
        print(start + delimiter.join(hdv_nt_pos[:,letters]) + end)
        print(start + delimiter.join(hdv_nt_pos[:,positions]) + end)
        print()
        print(start + delimiter.join(lig_nt_pos[:,letters]) + end)
        print(start + delimiter.join(lig_nt_pos[:,positions]) + end)
        print()

    # int array print
    print_data(start='[',delimiter=', ',end=']')

    # markdown print
    print_data(delimiter='\t')

    # markdown table generator:
    # ref: https://www.tablesgenerator.com/markdown_tables

    pass

